Time complexity= O(nlogn)+O(m*n) Space complexity=O(m)  

class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
      Arrays.sort(arr, (a, b) -> (b.profit - a.profit));
      
      int max=0;
      
      for(int i=0;i<n;i++){
          if(arr[i].deadline>max){
              max=arr[i].deadline;
          }
      }
      
      int[] arr1=new int[max+1];
      
      for(int i=0;i<=max;i++){
          arr1[i]=-1;
      }
      
      int profit=0; int count=0;
      for(int i=0;i<n;i++){
          for(int j=arr[i].deadline;j>0;j--){
              if(arr1[j]==-1){
                  arr1[j]=i;
                  count++;
                  profit+=arr[i].profit;
                  break;
              }
          }
      }
      
      int[] ans=new int[2];
      ans[0]=count;
      ans[1]=profit;
      return ans;
    }
}

