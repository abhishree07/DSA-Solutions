Time Complexity = O(nlogn) Space Complexity O(1)
class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
       Arrays.sort(arr, (a, b) -> Double.compare(b.value * 1.0 / b.weight, a.value * 1.0 / a.weight));
       double value=0;
       for(int i=0;i<n&&W!=0;i++){
           if(arr[i].weight<=W){
               value+=arr[i].value;
                W-=arr[i].weight;
           }
           
           else {
               value+=((double)arr[i].value/(double)arr[i].weight)*(double)W;
               W=0;
           }
       }
       return value;
    }
}
