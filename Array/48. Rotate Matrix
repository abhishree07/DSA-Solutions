#Brute Force Solution 
Time Complexity - O(n*n) Space Complexity O(n*n)
class Solution {
    public void rotate(int[][] arr) {
        int n=arr.length;
        int[][] arrNew=new int[n][n];

        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                arrNew[j][n-i-1]=arr[i][j];
            }
        }
    }
}

#Optimized Solution
#Time Complexity - O(n*n) Space Complexity - O(1)
class Solution {
    public void rotate(int[][] arr) {
        int n=arr.length;
        for(int i=0;i<n;i++){
            for(int j=i;j<n;j++){
               int temp = 0;
               temp=arr[i][j];
               arr[i][j]=arr[j][i];
               arr[j][i]=temp;
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<n/2;j++){
              int temp=0;
              temp=arr[i][j];
              arr[i][j]=arr[i][n-1-j];
              arr[i][n-1-j]=temp;     
            }
        }
    }
}
