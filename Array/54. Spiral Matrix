#Brute Force Approach
Time Complexity O(m*n) Space Complexity O(n) - traversals in list

class Solution {
    public List<Integer> spiralOrder(int[][] arr) {
        List<Integer> list=new ArrayList<Integer>();
        int m=arr.length; //row
        int n=arr[0].length; //column
        int top=0; int bottom=m-1; 
        int left=0; int right=n-1;
            while(left<=right && top<=bottom){
                //row printing
                for(int i=left;i<=right;i++){
                    list.add(arr[top][i]);
                }
                top++;
                 //column printing
                 for(int j=top;j<=bottom;j++){
                    list.add(arr[j][right]);
                 }
                 right--;
                if(top<=bottom){ //to check if top is beneath bottom
                 for(int k=right;k>=left;k--){
                    list.add(arr[bottom][k]);
                 }
                bottom--;
                }

                if(left<=right){ //to check for the initial condition of left still being <=right
                 for(int l=bottom;l>=top;l--){
                    list.add(arr[l][left]);
                 }
                 left++;
                }
            }
            return list;
        }
    }
