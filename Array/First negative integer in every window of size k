   //time complexity = O(n-k+1)*k => when k=n/2 the outer loop runs n/2 and nner also runs n/2 giving a quadratic like behaviour O(n*k)
    public long[] printFirstNegativeInteger(long arr[], int n, int k)
    { 
        long[] ans=new long[n-k+1];
        for(int i=0;i<n-k+1;i++){
            for(int j=i;j<i+k;j++){
                if(arr[j]<0){
                ans[i]=arr[j];
                break;
                }
            }
        }
        return ans;
    }
